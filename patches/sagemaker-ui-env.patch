Index: sagemaker-code-editor/vscode/src/vs/server/node/webClientServer.ts
===================================================================
--- sagemaker-code-editor.orig/vscode/src/vs/server/node/webClientServer.ts
+++ sagemaker-code-editor/vscode/src/vs/server/node/webClientServer.ts
@@ -102,6 +102,7 @@ export class WebClientServer {
 	private readonly _callbackRoute: string;
 	private readonly _webExtensionRoute: string;
 	private readonly _idleRoute: string;
+	private readonly _envMetadata: string;
 
 	constructor(
 		private readonly _connectionToken: ServerConnectionToken,
@@ -118,6 +119,7 @@ export class WebClientServer {
 		this._callbackRoute = `${serverRootPath}/callback`;
 		this._webExtensionRoute = `${serverRootPath}/web-extension-resource`;
 		this._idleRoute = '/api/idle';
+		this._envMetadata = '/api/env';
 	}
 
 	/**
@@ -146,6 +148,9 @@ export class WebClientServer {
 				// extension resource support
 				return this._handleWebExtensionResource(req, res, parsedUrl);
 			}
+			if (pathname === this._envMetadata) {
+				return this._handleEnvMetadata(req, res);
+			}
 
 			return serveError(req, res, 404, 'Not found.');
 		} catch (error) {
@@ -482,6 +487,26 @@ export class WebClientServer {
 			serveError(req, res, 500, error.message)
 		}
 	}
+
+	/**
+	 * Handles API requests to retrieve the /opt/ml/metadata/resource-metadata.json file.
+	 */
+	private async _handleEnvMetadata(req: http.IncomingMessage, res: http.ServerResponse): Promise<void> {
+		try {
+			const envMetadataDirectory = '/opt/ml/metadata/';
+			const envMetadataFilePath = path.join(envMetadataDirectory, 'resource-metadata.json');
+			if (existsSync(envMetadataFilePath)) {
+				const envMetadata = await readFile(envMetadataFilePath, 'utf8');
+				res.statusCode = 200;
+				res.setHeader('Content-Type', 'application/json');
+				res.end(envMetadata);
+			} else {
+				serveError(req, res, 500, 'No metadata file at ' + envMetadataFilePath);
+			}
+		} catch (error) {
+			serveError(req, res, 500, error.message);
+		}
+	}
 }
 
 /**
